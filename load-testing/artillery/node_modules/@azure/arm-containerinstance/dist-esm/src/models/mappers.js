/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const ContainerGroupListResult = {
    type: {
        name: "Composite",
        className: "ContainerGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ContainerGroupProperties = {
    type: {
        name: "Composite",
        className: "ContainerGroupProperties",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ContainerGroupIdentity"
                }
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            containers: {
                serializedName: "properties.containers",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Container"
                        }
                    }
                }
            },
            imageRegistryCredentials: {
                serializedName: "properties.imageRegistryCredentials",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ImageRegistryCredential"
                        }
                    }
                }
            },
            restartPolicy: {
                serializedName: "properties.restartPolicy",
                type: {
                    name: "String"
                }
            },
            ipAddress: {
                serializedName: "properties.ipAddress",
                type: {
                    name: "Composite",
                    className: "IpAddress"
                }
            },
            osType: {
                serializedName: "properties.osType",
                required: true,
                type: {
                    name: "String"
                }
            },
            volumes: {
                serializedName: "properties.volumes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Volume"
                        }
                    }
                }
            },
            instanceView: {
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "ContainerGroupPropertiesInstanceView"
                }
            },
            diagnostics: {
                serializedName: "properties.diagnostics",
                type: {
                    name: "Composite",
                    className: "ContainerGroupDiagnostics"
                }
            },
            subnetIds: {
                serializedName: "properties.subnetIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerGroupSubnetId"
                        }
                    }
                }
            },
            dnsConfig: {
                serializedName: "properties.dnsConfig",
                type: {
                    name: "Composite",
                    className: "DnsConfiguration"
                }
            },
            sku: {
                serializedName: "properties.sku",
                type: {
                    name: "String"
                }
            },
            encryptionProperties: {
                serializedName: "properties.encryptionProperties",
                type: {
                    name: "Composite",
                    className: "EncryptionProperties"
                }
            },
            initContainers: {
                serializedName: "properties.initContainers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InitContainerDefinition"
                        }
                    }
                }
            },
            extensions: {
                serializedName: "properties.extensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeploymentExtensionSpec"
                        }
                    }
                }
            },
            confidentialComputeProperties: {
                serializedName: "properties.confidentialComputeProperties",
                type: {
                    name: "Composite",
                    className: "ConfidentialComputeProperties"
                }
            },
            priority: {
                serializedName: "properties.priority",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerGroupIdentity = {
    type: {
        name: "Composite",
        className: "ContainerGroupIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                    ]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "UserAssignedIdentities" }
                    }
                }
            }
        }
    }
};
export const UserAssignedIdentities = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentities",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Container = {
    type: {
        name: "Composite",
        className: "Container",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            image: {
                serializedName: "properties.image",
                required: true,
                type: {
                    name: "String"
                }
            },
            command: {
                serializedName: "properties.command",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            ports: {
                serializedName: "properties.ports",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerPort"
                        }
                    }
                }
            },
            environmentVariables: {
                serializedName: "properties.environmentVariables",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EnvironmentVariable"
                        }
                    }
                }
            },
            instanceView: {
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "ContainerPropertiesInstanceView"
                }
            },
            resources: {
                serializedName: "properties.resources",
                type: {
                    name: "Composite",
                    className: "ResourceRequirements"
                }
            },
            volumeMounts: {
                serializedName: "properties.volumeMounts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VolumeMount"
                        }
                    }
                }
            },
            livenessProbe: {
                serializedName: "properties.livenessProbe",
                type: {
                    name: "Composite",
                    className: "ContainerProbe"
                }
            },
            readinessProbe: {
                serializedName: "properties.readinessProbe",
                type: {
                    name: "Composite",
                    className: "ContainerProbe"
                }
            },
            securityContext: {
                serializedName: "properties.securityContext",
                type: {
                    name: "Composite",
                    className: "SecurityContextDefinition"
                }
            }
        }
    }
};
export const ContainerPort = {
    type: {
        name: "Composite",
        className: "ContainerPort",
        modelProperties: {
            protocol: {
                serializedName: "protocol",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const EnvironmentVariable = {
    type: {
        name: "Composite",
        className: "EnvironmentVariable",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            secureValue: {
                serializedName: "secureValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerPropertiesInstanceView = {
    type: {
        name: "Composite",
        className: "ContainerPropertiesInstanceView",
        modelProperties: {
            restartCount: {
                serializedName: "restartCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            currentState: {
                serializedName: "currentState",
                type: {
                    name: "Composite",
                    className: "ContainerState"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Composite",
                    className: "ContainerState"
                }
            },
            events: {
                serializedName: "events",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Event"
                        }
                    }
                }
            }
        }
    }
};
export const ContainerState = {
    type: {
        name: "Composite",
        className: "ContainerState",
        modelProperties: {
            state: {
                serializedName: "state",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            exitCode: {
                serializedName: "exitCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            finishTime: {
                serializedName: "finishTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            detailStatus: {
                serializedName: "detailStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Event = {
    type: {
        name: "Composite",
        className: "Event",
        modelProperties: {
            count: {
                serializedName: "count",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            firstTimestamp: {
                serializedName: "firstTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            lastTimestamp: {
                serializedName: "lastTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceRequirements = {
    type: {
        name: "Composite",
        className: "ResourceRequirements",
        modelProperties: {
            requests: {
                serializedName: "requests",
                type: {
                    name: "Composite",
                    className: "ResourceRequests"
                }
            },
            limits: {
                serializedName: "limits",
                type: {
                    name: "Composite",
                    className: "ResourceLimits"
                }
            }
        }
    }
};
export const ResourceRequests = {
    type: {
        name: "Composite",
        className: "ResourceRequests",
        modelProperties: {
            memoryInGB: {
                serializedName: "memoryInGB",
                required: true,
                type: {
                    name: "Number"
                }
            },
            cpu: {
                serializedName: "cpu",
                required: true,
                type: {
                    name: "Number"
                }
            },
            gpu: {
                serializedName: "gpu",
                type: {
                    name: "Composite",
                    className: "GpuResource"
                }
            }
        }
    }
};
export const GpuResource = {
    type: {
        name: "Composite",
        className: "GpuResource",
        modelProperties: {
            count: {
                serializedName: "count",
                required: true,
                type: {
                    name: "Number"
                }
            },
            sku: {
                serializedName: "sku",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceLimits = {
    type: {
        name: "Composite",
        className: "ResourceLimits",
        modelProperties: {
            memoryInGB: {
                serializedName: "memoryInGB",
                type: {
                    name: "Number"
                }
            },
            cpu: {
                serializedName: "cpu",
                type: {
                    name: "Number"
                }
            },
            gpu: {
                serializedName: "gpu",
                type: {
                    name: "Composite",
                    className: "GpuResource"
                }
            }
        }
    }
};
export const VolumeMount = {
    type: {
        name: "Composite",
        className: "VolumeMount",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            mountPath: {
                serializedName: "mountPath",
                required: true,
                type: {
                    name: "String"
                }
            },
            readOnly: {
                serializedName: "readOnly",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ContainerProbe = {
    type: {
        name: "Composite",
        className: "ContainerProbe",
        modelProperties: {
            exec: {
                serializedName: "exec",
                type: {
                    name: "Composite",
                    className: "ContainerExec"
                }
            },
            httpGet: {
                serializedName: "httpGet",
                type: {
                    name: "Composite",
                    className: "ContainerHttpGet"
                }
            },
            initialDelaySeconds: {
                serializedName: "initialDelaySeconds",
                type: {
                    name: "Number"
                }
            },
            periodSeconds: {
                serializedName: "periodSeconds",
                type: {
                    name: "Number"
                }
            },
            failureThreshold: {
                serializedName: "failureThreshold",
                type: {
                    name: "Number"
                }
            },
            successThreshold: {
                serializedName: "successThreshold",
                type: {
                    name: "Number"
                }
            },
            timeoutSeconds: {
                serializedName: "timeoutSeconds",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ContainerExec = {
    type: {
        name: "Composite",
        className: "ContainerExec",
        modelProperties: {
            command: {
                serializedName: "command",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ContainerHttpGet = {
    type: {
        name: "Composite",
        className: "ContainerHttpGet",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                required: true,
                type: {
                    name: "Number"
                }
            },
            scheme: {
                serializedName: "scheme",
                type: {
                    name: "String"
                }
            },
            httpHeaders: {
                serializedName: "httpHeaders",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HttpHeader"
                        }
                    }
                }
            }
        }
    }
};
export const HttpHeader = {
    type: {
        name: "Composite",
        className: "HttpHeader",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecurityContextDefinition = {
    type: {
        name: "Composite",
        className: "SecurityContextDefinition",
        modelProperties: {
            privileged: {
                serializedName: "privileged",
                type: {
                    name: "Boolean"
                }
            },
            allowPrivilegeEscalation: {
                serializedName: "allowPrivilegeEscalation",
                type: {
                    name: "Boolean"
                }
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Composite",
                    className: "SecurityContextCapabilitiesDefinition"
                }
            },
            runAsGroup: {
                serializedName: "runAsGroup",
                type: {
                    name: "Number"
                }
            },
            runAsUser: {
                serializedName: "runAsUser",
                type: {
                    name: "Number"
                }
            },
            seccompProfile: {
                serializedName: "seccompProfile",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecurityContextCapabilitiesDefinition = {
    type: {
        name: "Composite",
        className: "SecurityContextCapabilitiesDefinition",
        modelProperties: {
            add: {
                serializedName: "add",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            drop: {
                serializedName: "drop",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ImageRegistryCredential = {
    type: {
        name: "Composite",
        className: "ImageRegistryCredential",
        modelProperties: {
            server: {
                serializedName: "server",
                required: true,
                type: {
                    name: "String"
                }
            },
            username: {
                serializedName: "username",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "String"
                }
            },
            identityUrl: {
                serializedName: "identityUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IpAddress = {
    type: {
        name: "Composite",
        className: "IpAddress",
        modelProperties: {
            ports: {
                serializedName: "ports",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Port"
                        }
                    }
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            ip: {
                serializedName: "ip",
                type: {
                    name: "String"
                }
            },
            dnsNameLabel: {
                serializedName: "dnsNameLabel",
                type: {
                    name: "String"
                }
            },
            autoGeneratedDomainNameLabelScope: {
                defaultValue: "Unsecure",
                serializedName: "autoGeneratedDomainNameLabelScope",
                type: {
                    name: "String"
                }
            },
            fqdn: {
                serializedName: "fqdn",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Port = {
    type: {
        name: "Composite",
        className: "Port",
        modelProperties: {
            protocol: {
                serializedName: "protocol",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Volume = {
    type: {
        name: "Composite",
        className: "Volume",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            azureFile: {
                serializedName: "azureFile",
                type: {
                    name: "Composite",
                    className: "AzureFileVolume"
                }
            },
            emptyDir: {
                serializedName: "emptyDir",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            },
            secret: {
                serializedName: "secret",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            gitRepo: {
                serializedName: "gitRepo",
                type: {
                    name: "Composite",
                    className: "GitRepoVolume"
                }
            }
        }
    }
};
export const AzureFileVolume = {
    type: {
        name: "Composite",
        className: "AzureFileVolume",
        modelProperties: {
            shareName: {
                serializedName: "shareName",
                required: true,
                type: {
                    name: "String"
                }
            },
            readOnly: {
                serializedName: "readOnly",
                type: {
                    name: "Boolean"
                }
            },
            storageAccountName: {
                serializedName: "storageAccountName",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageAccountKey: {
                serializedName: "storageAccountKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GitRepoVolume = {
    type: {
        name: "Composite",
        className: "GitRepoVolume",
        modelProperties: {
            directory: {
                serializedName: "directory",
                type: {
                    name: "String"
                }
            },
            repository: {
                serializedName: "repository",
                required: true,
                type: {
                    name: "String"
                }
            },
            revision: {
                serializedName: "revision",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerGroupPropertiesInstanceView = {
    type: {
        name: "Composite",
        className: "ContainerGroupPropertiesInstanceView",
        modelProperties: {
            events: {
                serializedName: "events",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Event"
                        }
                    }
                }
            },
            state: {
                serializedName: "state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerGroupDiagnostics = {
    type: {
        name: "Composite",
        className: "ContainerGroupDiagnostics",
        modelProperties: {
            logAnalytics: {
                serializedName: "logAnalytics",
                type: {
                    name: "Composite",
                    className: "LogAnalytics"
                }
            }
        }
    }
};
export const LogAnalytics = {
    type: {
        name: "Composite",
        className: "LogAnalytics",
        modelProperties: {
            workspaceId: {
                serializedName: "workspaceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            workspaceKey: {
                serializedName: "workspaceKey",
                required: true,
                type: {
                    name: "String"
                }
            },
            logType: {
                serializedName: "logType",
                type: {
                    name: "String"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            workspaceResourceId: {
                serializedName: "workspaceResourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerGroupSubnetId = {
    type: {
        name: "Composite",
        className: "ContainerGroupSubnetId",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DnsConfiguration = {
    type: {
        name: "Composite",
        className: "DnsConfiguration",
        modelProperties: {
            nameServers: {
                serializedName: "nameServers",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            searchDomains: {
                serializedName: "searchDomains",
                type: {
                    name: "String"
                }
            },
            options: {
                serializedName: "options",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EncryptionProperties = {
    type: {
        name: "Composite",
        className: "EncryptionProperties",
        modelProperties: {
            vaultBaseUrl: {
                serializedName: "vaultBaseUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyName: {
                serializedName: "keyName",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyVersion: {
                serializedName: "keyVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InitContainerDefinition = {
    type: {
        name: "Composite",
        className: "InitContainerDefinition",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            image: {
                serializedName: "properties.image",
                type: {
                    name: "String"
                }
            },
            command: {
                serializedName: "properties.command",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            environmentVariables: {
                serializedName: "properties.environmentVariables",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EnvironmentVariable"
                        }
                    }
                }
            },
            instanceView: {
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "InitContainerPropertiesDefinitionInstanceView"
                }
            },
            volumeMounts: {
                serializedName: "properties.volumeMounts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VolumeMount"
                        }
                    }
                }
            },
            securityContext: {
                serializedName: "properties.securityContext",
                type: {
                    name: "Composite",
                    className: "SecurityContextDefinition"
                }
            }
        }
    }
};
export const InitContainerPropertiesDefinitionInstanceView = {
    type: {
        name: "Composite",
        className: "InitContainerPropertiesDefinitionInstanceView",
        modelProperties: {
            restartCount: {
                serializedName: "restartCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            currentState: {
                serializedName: "currentState",
                type: {
                    name: "Composite",
                    className: "ContainerState"
                }
            },
            previousState: {
                serializedName: "previousState",
                type: {
                    name: "Composite",
                    className: "ContainerState"
                }
            },
            events: {
                serializedName: "events",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Event"
                        }
                    }
                }
            }
        }
    }
};
export const DeploymentExtensionSpec = {
    type: {
        name: "Composite",
        className: "DeploymentExtensionSpec",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            extensionType: {
                serializedName: "properties.extensionType",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            },
            settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            },
            protectedSettings: {
                serializedName: "properties.protectedSettings",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
export const ConfidentialComputeProperties = {
    type: {
        name: "Composite",
        className: "ConfidentialComputeProperties",
        modelProperties: {
            ccePolicy: {
                serializedName: "ccePolicy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody"
                        }
                    }
                }
            }
        }
    }
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageListResult = {
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            }
        }
    }
};
export const UsageName = {
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Logs = {
    type: {
        name: "Composite",
        className: "Logs",
        modelProperties: {
            content: {
                serializedName: "content",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerExecRequest = {
    type: {
        name: "Composite",
        className: "ContainerExecRequest",
        modelProperties: {
            command: {
                serializedName: "command",
                type: {
                    name: "String"
                }
            },
            terminalSize: {
                serializedName: "terminalSize",
                type: {
                    name: "Composite",
                    className: "ContainerExecRequestTerminalSize"
                }
            }
        }
    }
};
export const ContainerExecRequestTerminalSize = {
    type: {
        name: "Composite",
        className: "ContainerExecRequestTerminalSize",
        modelProperties: {
            rows: {
                serializedName: "rows",
                type: {
                    name: "Number"
                }
            },
            cols: {
                serializedName: "cols",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ContainerExecResponse = {
    type: {
        name: "Composite",
        className: "ContainerExecResponse",
        modelProperties: {
            webSocketUri: {
                serializedName: "webSocketUri",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerAttachResponse = {
    type: {
        name: "Composite",
        className: "ContainerAttachResponse",
        modelProperties: {
            webSocketUri: {
                serializedName: "webSocketUri",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachedImagesListResult = {
    type: {
        name: "Composite",
        className: "CachedImagesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CachedImages"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachedImages = {
    type: {
        name: "Composite",
        className: "CachedImages",
        modelProperties: {
            osType: {
                serializedName: "osType",
                required: true,
                type: {
                    name: "String"
                }
            },
            image: {
                serializedName: "image",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CapabilitiesListResult = {
    type: {
        name: "Composite",
        className: "CapabilitiesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capabilities"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Capabilities = {
    type: {
        name: "Composite",
        className: "Capabilities",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            osType: {
                serializedName: "osType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ipAddressType: {
                serializedName: "ipAddressType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            gpu: {
                serializedName: "gpu",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Composite",
                    className: "CapabilitiesCapabilities"
                }
            }
        }
    }
};
export const CapabilitiesCapabilities = {
    type: {
        name: "Composite",
        className: "CapabilitiesCapabilities",
        modelProperties: {
            maxMemoryInGB: {
                serializedName: "maxMemoryInGB",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maxCpu: {
                serializedName: "maxCpu",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maxGpuCount: {
                serializedName: "maxGpuCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ContainerGroup = {
    type: {
        name: "Composite",
        className: "ContainerGroup",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), ContainerGroupProperties.type.modelProperties)
    }
};
//# sourceMappingURL=mappers.js.map