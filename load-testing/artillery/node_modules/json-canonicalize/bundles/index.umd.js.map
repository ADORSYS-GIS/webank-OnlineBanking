{"version":3,"file":"index.umd.js","sources":["../../src/canonicalize.ts","../../src/canonicalize-ex.ts"],"sourcesContent":["export function canonicalize(obj: any) {\n  let buffer = ''\n\n  serialize(obj)\n\n  return buffer\n\n  function serialize(object: any) {\n    if (\n      object === null ||\n      typeof object !== 'object' ||\n      object.toJSON != null\n    ) {\n      /////////////////////////////////////////////////\n      // Primitive data type - Use ES6/JSON          //\n      /////////////////////////////////////////////////\n      buffer += JSON.stringify(object)\n\n      // } else if (object instanceof Date) {\n      //   buffer += JSON.stringify(object);\n    } else if (Array.isArray(object)) {\n      /////////////////////////////////////////////////\n      // Array - Maintain element order              //\n      /////////////////////////////////////////////////\n      buffer += '['\n      let next = false\n      object.forEach((element) => {\n        if (next) {\n          buffer += ','\n        }\n        next = true\n        if (element === undefined) {element = null}\n        /////////////////////////////////////////\n        // Array element - Recursive expansion //\n        /////////////////////////////////////////\n        serialize(element)\n      })\n      buffer += ']'\n    } else {\n      /////////////////////////////////////////////////\n      // Object - Sort properties before serializing //\n      /////////////////////////////////////////////////\n      buffer += '{'\n      const vKeys = Object.keys(object).filter((k)=> object[k] !== undefined).sort()\n      vKeys.forEach((property, index) => addProp(object, property, index))\n      buffer += '}'\n    }\n  }\n\n  function addProp(object: any, property: string, index: number) {\n    if (index > 0) {\n      buffer += ','\n    }\n    ///////////////////////////////////////////////\n    // Property names are strings - Use ES6/JSON //\n    ///////////////////////////////////////////////\n    buffer += JSON.stringify(property)\n    buffer += ':'\n    //////////////////////////////////////////\n    // Property value - Recursive expansion //\n    //////////////////////////////////////////\n    serialize(object[property])\n  }\n}\n","export interface IOptions {\n  exclude?: string | string[]\n  include?: string[]\n}\n\nexport function canonicalizeEx(obj: any, options?: IOptions) {\n  let buffer = ''\n  const vInclude = options && options.include\n  let vExclude = options && options.exclude\n  if (vExclude) {\n    if (typeof vExclude === 'string') vExclude = [vExclude]\n  }\n  if (vInclude) vInclude.sort()\n\n  serialize(obj)\n\n  return buffer\n\n  function serialize(object: any, parent?: object) {\n    if (\n      object === null ||\n      typeof object !== 'object' ||\n      object.toJSON != null\n    ) {\n      /////////////////////////////////////////////////\n      // Primitive data type - Use ES6/JSON          //\n      /////////////////////////////////////////////////\n      buffer += JSON.stringify(object)\n\n      // } else if (object instanceof Date) {\n      //   buffer += JSON.stringify(object);\n    } else if (Array.isArray(object)) {\n      /////////////////////////////////////////////////\n      // Array - Maintain element order              //\n      /////////////////////////////////////////////////\n      buffer += '['\n      let next = false\n      object.forEach((element) => {\n        if (next) {\n          buffer += ','\n        }\n        next = true\n        /////////////////////////////////////////\n        // Array element - Recursive expansion //\n        /////////////////////////////////////////\n        serialize(element, object)\n      })\n      buffer += ']'\n    } else {\n      /////////////////////////////////////////////////\n      // Object - Sort properties before serializing //\n      /////////////////////////////////////////////////\n      buffer += '{'\n      if (!parent && vInclude) {\n        vInclude.forEach((property, index) => {\n          if (!object.hasOwnProperty(property)) return\n          addProp(object, property, index)\n        })\n      } else {\n        const vKeys = Object.keys(object).sort()\n        vKeys.forEach((property, index) => addProp(object, property, index))\n      }\n      buffer += '}'\n    }\n  }\n\n  function addProp(object: any, property: string, index: number) {\n    if (vExclude && vExclude.length) {\n      for (const v of vExclude) {\n        if (v === property) return\n      }\n    }\n    if (index > 0) {\n      buffer += ','\n    }\n    ///////////////////////////////////////////////\n    // Property names are strings - Use ES6/JSON //\n    ///////////////////////////////////////////////\n    buffer += JSON.stringify(property)\n    buffer += ':'\n    //////////////////////////////////////////\n    // Property value - Recursive expansion //\n    //////////////////////////////////////////\n    serialize(object[property], object)\n  }\n}\n"],"names":[],"mappings":";;;;;;aAAgB,YAAY,CAAC,GAAQ;QACnC,IAAI,MAAM,GAAG,EAAE,CAAA;QAEf,SAAS,CAAC,GAAG,CAAC,CAAA;QAEd,OAAO,MAAM,CAAA;QAEb,SAAS,SAAS,CAAC,MAAW;YAC5B,IACE,MAAM,KAAK,IAAI;gBACf,OAAO,MAAM,KAAK,QAAQ;gBAC1B,MAAM,CAAC,MAAM,IAAI,IAAI,EACrB;;;;gBAIA,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;;;aAIjC;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;;;gBAIhC,MAAM,IAAI,GAAG,CAAA;gBACb,IAAI,MAAI,GAAG,KAAK,CAAA;gBAChB,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO;oBACrB,IAAI,MAAI,EAAE;wBACR,MAAM,IAAI,GAAG,CAAA;qBACd;oBACD,MAAI,GAAG,IAAI,CAAA;oBACX,IAAI,OAAO,KAAK,SAAS,EAAE;wBAAC,OAAO,GAAG,IAAI,CAAA;qBAAC;;;;oBAI3C,SAAS,CAAC,OAAO,CAAC,CAAA;iBACnB,CAAC,CAAA;gBACF,MAAM,IAAI,GAAG,CAAA;aACd;iBAAM;;;;gBAIL,MAAM,IAAI,GAAG,CAAA;gBACb,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,GAAA,CAAC,CAAC,IAAI,EAAE,CAAA;gBAC9E,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAA,CAAC,CAAA;gBACpE,MAAM,IAAI,GAAG,CAAA;aACd;SACF;QAED,SAAS,OAAO,CAAC,MAAW,EAAE,QAAgB,EAAE,KAAa;YAC3D,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,MAAM,IAAI,GAAG,CAAA;aACd;;;;YAID,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAClC,MAAM,IAAI,GAAG,CAAA;;;;YAIb,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;SAC5B;IACH;;aC1DgB,cAAc,CAAC,GAAQ,EAAE,OAAkB;QACzD,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAM,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAA;QAC3C,IAAI,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAA;QACzC,IAAI,QAAQ,EAAE;YACZ,IAAI,OAAO,QAAQ,KAAK,QAAQ;gBAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAA;SACxD;QACD,IAAI,QAAQ;YAAE,QAAQ,CAAC,IAAI,EAAE,CAAA;QAE7B,SAAS,CAAC,GAAG,CAAC,CAAA;QAEd,OAAO,MAAM,CAAA;QAEb,SAAS,SAAS,CAAC,MAAW,EAAE,MAAe;YAC7C,IACE,MAAM,KAAK,IAAI;gBACf,OAAO,MAAM,KAAK,QAAQ;gBAC1B,MAAM,CAAC,MAAM,IAAI,IAAI,EACrB;;;;gBAIA,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;;;aAIjC;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;;;gBAIhC,MAAM,IAAI,GAAG,CAAA;gBACb,IAAI,MAAI,GAAG,KAAK,CAAA;gBAChB,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO;oBACrB,IAAI,MAAI,EAAE;wBACR,MAAM,IAAI,GAAG,CAAA;qBACd;oBACD,MAAI,GAAG,IAAI,CAAA;;;;oBAIX,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;iBAC3B,CAAC,CAAA;gBACF,MAAM,IAAI,GAAG,CAAA;aACd;iBAAM;;;;gBAIL,MAAM,IAAI,GAAG,CAAA;gBACb,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;oBACvB,QAAQ,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK;wBAC/B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;4BAAE,OAAM;wBAC5C,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;qBACjC,CAAC,CAAA;iBACH;qBAAM;oBACL,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAA;oBACxC,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAA,CAAC,CAAA;iBACrE;gBACD,MAAM,IAAI,GAAG,CAAA;aACd;SACF;QAED,SAAS,OAAO,CAAC,MAAW,EAAE,QAAgB,EAAE,KAAa;YAC3D,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;gBAC/B,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;oBAArB,IAAM,CAAC,iBAAA;oBACV,IAAI,CAAC,KAAK,QAAQ;wBAAE,OAAM;iBAC3B;aACF;YACD,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,MAAM,IAAI,GAAG,CAAA;aACd;;;;YAID,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAClC,MAAM,IAAI,GAAG,CAAA;;;;YAIb,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAA;SACpC;IACH;;;;;;;;;;;"}